import paramiko
import pandas as pd
import os
from datetime import datetime
import openpyxl

def download_file_from_sftp_to_network(output_network_path):
    """
    Downloads a single file from an SFTP server to a specified network directory.
    """
    try:
        # SFTP connection parameters
        host = 'ftp.onevizion.com'
        username = 'xxx'  # Replace with your username
        password = 'xxx'  # Replace with your password

        # Remote file path and name
        remote_file_path = '/home/samsung_sea2/es/Outbound/Quote_Tracker/Customer_PO_Doc'
        # Corrected remote file name
        remote_file_name = 'Quickbase_RFDS_CD_TED.xlsx'
        full_remote_path = os.path.join(remote_file_path, remote_file_name)

        # Local download directory and file name on the network drive
        current_datetime = datetime.now().strftime("%Y%m%d_%H%M%S")
        local_file_name = f"Quickbase_RFDS_CD_TED_{current_datetime}.xlsx"
        full_local_path = os.path.join(output_network_path, local_file_name)
        
        # Ensure the network directory exists
        os.makedirs(output_network_path, exist_ok=True)

        # Establish SFTP connection
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username=username, password=password)

        sftp = ssh.open_sftp()

        # Download file
        sftp.get(full_remote_path, full_local_path)
        print(f"File downloaded successfully to {full_local_path}")
        
        return full_local_path

    except Exception as e:
        print(f"An error occurred: {e}")
        return None
    finally:
        # Close SFTP and SSH connections safely
        if 'sftp' in locals():
            sftp.close()
        if 'ssh' in locals():
            ssh.close()


def process_excel_to_dataframe(excel_path):
    """
    Reads an Excel file and returns its content as a DataFrame.
    """
    try:
        if excel_path and os.path.exists(excel_path):
            df = pd.read_excel(excel_path)
            print(f"Read Excel file from: {excel_path}")
            return df
    except Exception as e:
        print(f"Error processing the Excel data: {e}")
        return pd.DataFrame()

# --- Standalone Python Script Execution ---
if __name__ == "__main__":
    network_path = r'\\netapp\depts\Jannat\Viaero\01. Quickbase'

    # Download the file to the network path
    downloaded_file_path = download_file_from_sftp_to_network(network_path)

    # If the download was successful, process the Excel file
    if downloaded_file_path:
        processed_df = process_excel_to_dataframe(downloaded_file_path)
        
        if not processed_df.empty:
            print("\n--- Processed DataFrame (first 5 rows) ---")
            print(processed_df.head())

